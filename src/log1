1. Running translator
Second argument is a file name: use two translator arguments.
Parsing...
Parsing: [0.000s CPU, 0.001s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock]
Preparing model... [0.000s CPU, 0.000s wall-clock]
Generated 8 rules.
Computing model... [0.000s CPU, 0.001s wall-clock]
100 relevant atoms
33 auxiliary atoms
133 final queue length
190 total queue pushes
Completing instantiation... [0.000s CPU, 0.001s wall-clock]
Instantiating: [0.000s CPU, 0.004s wall-clock]
Computing fact groups...
Finding invariants...
3 initial candidates
Finding invariants: [0.000s CPU, 0.001s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.000s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
0 uncovered facts
Choosing groups: [0.000s CPU, 0.000s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.000s CPU, 0.001s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.000s wall-clock]
Translating task: [0.000s CPU, 0.001s wall-clock]
0 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
Removed false proposition: 0 = <none of those>
0 operators removed
1 propositions removed
Detecting unreachable propositions: [0.000s CPU, 0.000s wall-clock]
Translator variables: 1
Translator derived variables: 0
Translator facts: 8
Translator goal facts: 1
Translator mutex groups: 1
Translator total mutex groups size: 8
Translator operators: 56
Translator axioms: 0
Translator task size: 186
Translator peak memory: 22328 KB
Writing output... [0.000s CPU, 0.000s wall-clock]
Done! [0.000s CPU, 0.008s wall-clock]

2. Running preprocessor
Building causal graph...
The causal graph is acyclic.
1 variables of 1 necessary
0 of 1 mutex groups necessary.
56 of 56 operators necessary.
0 of 0 axiom rules necessary.
Building domain transition graphs...
solveable in poly time 0
Building successor generator...
Preprocessor facts: 8
Preprocessor derived variables: 0
Preprocessor task size: 178
Writing output...
done


3. Running search
/home/sifao/resplanner/src/search/downward ipc policy-repair --resilient 6 --dump-resilient-policy 1
This is a unit task.
/home/sifao/resplanner/src/search/downward-release --heuristic "h=ff(cost_type=1)" --search "lazy_greedy([h],preferred=[h])" --random-seed 814102613 --resilient 6 --dump-resilient-policy 1 < output
Simplifying transitions... done!
Variables: 1
Bytes per state: 4
Total allotted time (s): 1800

Initial state is resilient, problem is 6-resilient!


--------------------------------------------------------------------

                  -{ Resilient plan }-

fly plane1 city0 city1
Not found, node #105
#126
Node: 28983324
Atom at(plane1, city2)
k: 0
deactivated_op: 
fly plane1 city0 city1
fly plane1 city2 city1
fly plane1 city3 city1
fly plane1 city5 city1
fly plane1 city6 city1
fly plane1 city6 city4
Next actions:
fly plane1 city2 city3
fly plane1 city2 city4
fly plane1 city2 city5
fly plane1 city2 city6
fly plane1 city2 city7
#127
Node: 28983328
Atom at(plane1, city3)
k: 0
deactivated_op: 
fly plane1 city0 city1
fly plane1 city2 city1
fly plane1 city3 city1
fly plane1 city5 city1
fly plane1 city6 city1
fly plane1 city6 city4
Next actions:
fly plane1 city3 city2
fly plane1 city3 city4
fly plane1 city3 city5
fly plane1 city3 city6
#128
Node: 28983324
Atom at(plane1, city2)
k: 0
deactivated_op: 
fly plane1 city0 city1
fly plane1 city2 city1
fly plane1 city3 city1
fly plane1 city5 city1
fly plane1 city6 city1
fly plane1 city6 city4
Next actions:
fly plane1 city2 city3
fly plane1 city2 city4
fly plane1 city2 city5
fly plane1 city2 city6
fly plane1 city2 city7
#129
Node: 28983328
Atom at(plane1, city3)
k: 0
deactivated_op: 
fly plane1 city0 city1
fly plane1 city2 city1
fly plane1 city3 city1
fly plane1 city5 city1
fly plane1 city6 city1
fly plane1 city6 city4
Next actions:
fly plane1 city3 city2
fly plane1 city3 city4
fly plane1 city3 city5
fly plane1 city3 city6
#130
Node: 28983324
Atom at(plane1, city2)
k: 0
deactivated_op: 
fly plane1 city0 city1
fly plane1 city2 city1
fly plane1 city3 city1
fly plane1 city5 city1
fly plane1 city6 city1
fly plane1 city6 city4
Next actions:
fly plane1 city2 city3
fly plane1 city2 city4
fly plane1 city2 city5
fly plane1 city2 city6
fly plane1 city2 city7
caught signal 2 -- exiting
