1. Running translator
Second argument is a file name: use two translator arguments.
Parsing...
Parsing: [0.000s CPU, 0.003s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.004s wall-clock]
Preparing model... [0.010s CPU, 0.002s wall-clock]
Generated 145 rules.
Computing model... [0.070s CPU, 0.069s wall-clock]
10943 relevant atoms
4917 auxiliary atoms
15860 final queue length
27929 total queue pushes
Completing instantiation... [0.210s CPU, 0.215s wall-clock]
Instantiating: [0.290s CPU, 0.291s wall-clock]
Computing fact groups...
Finding invariants...
32 initial candidates
Finding invariants: [0.000s CPU, 0.004s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.000s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
2610 uncovered facts
Choosing groups: [0.000s CPU, 0.001s wall-clock]
Building translation key... [0.000s CPU, 0.006s wall-clock]
Computing fact groups: [0.020s CPU, 0.025s wall-clock]
Building STRIPS to SAS dictionary... [0.030s CPU, 0.028s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.002s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.002s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.020s CPU, 0.013s wall-clock]
Translating task: [0.250s CPU, 0.235s wall-clock]
450 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
Removed false proposition: 1 = <none of those>
Removed false proposition: 2 = <none of those>
Removed false proposition: 3 = <none of those>
Removed false proposition: 4 = <none of those>
Removed false proposition: 5 = <none of those>
Removed false proposition: 6 = <none of those>
Removed false proposition: 7 = <none of those>
Removed false proposition: 8 = <none of those>
Removed false proposition: 9 = <none of those>
Removed false proposition: 10 = <none of those>
Removed false proposition: 11 = <none of those>
Removed false proposition: None = Atom locked(node0-0)
Removed true proposition: None = Atom open(node0-0)
Removed false proposition: None = <none of those>
Removed false proposition: None = Atom locked(node0-1)
Removed true proposition: None = Atom open(node0-1)
Removed false proposition: None = <none of those>
Removed false proposition: None = Atom locked(node0-2)
Removed true proposition: None = Atom open(node0-2)
Removed false proposition: None = <none of those>
Removed false proposition: None = Atom locked(node0-3)
Removed true proposition: None = Atom open(node0-3)
Removed false proposition: None = <none of those>
Removed false proposition: None = Atom locked(node0-4)
Removed true proposition: None = Atom open(node0-4)
Removed false proposition: None = <none of those>
Removed false proposition: None = Atom locked(node1-0)
Removed true proposition: None = Atom open(node1-0)
Removed false proposition: None = <none of those>
Removed false proposition: None = Atom locked(node1-1)
Removed true proposition: None = Atom open(node1-1)
Removed false proposition: None = <none of those>
Removed false proposition: None = Atom locked(node1-2)
Removed true proposition: None = Atom open(node1-2)
Removed false proposition: None = <none of those>
Removed false proposition: None = Atom locked(node1-3)
Removed true proposition: None = Atom open(node1-3)
Removed false proposition: None = <none of those>
Removed false proposition: None = Atom locked(node1-4)
Removed true proposition: None = Atom open(node1-4)
Removed false proposition: None = <none of those>
Removed false proposition: None = Atom locked(node2-0)
Removed true proposition: None = Atom open(node2-0)
Removed false proposition: None = <none of those>
Removed false proposition: None = Atom locked(node2-1)
Removed true proposition: None = Atom open(node2-1)
Removed false proposition: None = <none of those>
Removed false proposition: 12 = <none of those>
Removed false proposition: 13 = <none of those>
Removed false proposition: None = Atom locked(node2-4)
Removed true proposition: None = Atom open(node2-4)
Removed false proposition: None = <none of those>
Removed false proposition: None = Atom locked(node3-0)
Removed true proposition: None = Atom open(node3-0)
Removed false proposition: None = <none of those>
Removed false proposition: None = Atom locked(node3-1)
Removed true proposition: None = Atom open(node3-1)
Removed false proposition: None = <none of those>
Removed false proposition: 14 = <none of those>
Removed false proposition: 15 = <none of those>
Removed false proposition: 16 = <none of those>
Removed false proposition: None = Atom locked(node4-0)
Removed true proposition: None = Atom open(node4-0)
Removed false proposition: None = <none of those>
Removed false proposition: None = Atom locked(node4-1)
Removed true proposition: None = Atom open(node4-1)
Removed false proposition: None = <none of those>
Removed false proposition: 17 = <none of those>
Removed false proposition: 18 = <none of those>
Removed false proposition: 19 = <none of those>
Removed false proposition: None = Atom pickup-and-loose(node0-0, key0, key0)
Removed true proposition: None = NegatedAtom pickup-and-loose(node0-0, key0, key0)
Removed false proposition: None = Atom pickup-and-loose(node0-0, key1, key1)
Removed true proposition: None = NegatedAtom pickup-and-loose(node0-0, key1, key1)
Removed false proposition: None = Atom pickup-and-loose(node0-0, key2, key2)
Removed true proposition: None = NegatedAtom pickup-and-loose(node0-0, key2, key2)
Removed false proposition: None = Atom pickup-and-loose(node0-0, key3, key3)
Removed true proposition: None = NegatedAtom pickup-and-loose(node0-0, key3, key3)
Removed false proposition: None = Atom pickup-and-loose(node0-0, key4, key4)
Removed true proposition: None = NegatedAtom pickup-and-loose(node0-0, key4, key4)
Removed false proposition: None = Atom pickup-and-loose(node0-0, key5, key5)
Removed true proposition: None = NegatedAtom pickup-and-loose(node0-0, key5, key5)
Removed false proposition: None = Atom pickup-and-loose(node0-0, key6, key6)
Removed true proposition: None = NegatedAtom pickup-and-loose(node0-0, key6, key6)
Removed false proposition: None = Atom pickup-and-loose(node0-0, key7, key7)
Removed true proposition: None = NegatedAtom pickup-and-loose(node0-0, key7, key7)
Removed false proposition: None = Atom pickup-and-loose(node0-0, key8, key8)
Removed true proposition: None = NegatedAtom pickup-and-loose(node0-0, key8, key8)
Removed false proposition: None = Atom pickup-and-loose(node0-1, key0, key0)
Removed true proposition: None = NegatedAtom pickup-and-loose(node0-1, key0, key0)
Removed false proposition: None = Atom pickup-and-loose(node0-1, key1, key1)
Removed true proposition: None = NegatedAtom pickup-and-loose(node0-1, key1, key1)
Removed false proposition: None = Atom pickup-and-loose(node0-1, key2, key2)
Removed true proposition: None = NegatedAtom pickup-and-loose(node0-1, key2, key2)
Removed false proposition: None = Atom pickup-and-loose(node0-1, key3, key3)
Removed true proposition: None = NegatedAtom pickup-and-loose(node0-1, key3, key3)
Removed false proposition: None = Atom pickup-and-loose(node0-1, key4, key4)
Removed true proposition: None = NegatedAtom pickup-and-loose(node0-1, key4, key4)
Removed false proposition: None = Atom pickup-and-loose(node0-1, key5, key5)
Removed true proposition: None = NegatedAtom pickup-and-loose(node0-1, key5, key5)
Removed false proposition: None = Atom pickup-and-loose(node0-1, key6, key6)
Removed true proposition: None = NegatedAtom pickup-and-loose(node0-1, key6, key6)
Removed false proposition: None = Atom pickup-and-loose(node0-1, key7, key7)
Removed true proposition: None = NegatedAtom pickup-and-loose(node0-1, key7, key7)
Removed false proposition: None = Atom pickup-and-loose(node0-1, key8, key8)
Removed true proposition: None = NegatedAtom pickup-and-loose(node0-1, key8, key8)
Removed false proposition: None = Atom pickup-and-loose(node0-2, key0, key0)
Removed true proposition: None = NegatedAtom pickup-and-loose(node0-2, key0, key0)
Removed false proposition: None = Atom pickup-and-loose(node0-2, key1, key1)
Removed true proposition: None = NegatedAtom pickup-and-loose(node0-2, key1, key1)
Removed false proposition: None = Atom pickup-and-loose(node0-2, key2, key2)
Removed true proposition: None = NegatedAtom pickup-and-loose(node0-2, key2, key2)
Removed false proposition: None = Atom pickup-and-loose(node0-2, key3, key3)
Removed true proposition: None = NegatedAtom pickup-and-loose(node0-2, key3, key3)
Removed false proposition: None = Atom pickup-and-loose(node0-2, key4, key4)
Removed true proposition: None = NegatedAtom pickup-and-loose(node0-2, key4, key4)
Removed false proposition: None = Atom pickup-and-loose(node0-2, key5, key5)
Removed true proposition: None = NegatedAtom pickup-and-loose(node0-2, key5, key5)
Removed false proposition: None = Atom pickup-and-loose(node0-2, key6, key6)
Removed true proposition: None = NegatedAtom pickup-and-loose(node0-2, key6, key6)
Removed false proposition: None = Atom pickup-and-loose(node0-2, key7, key7)
Removed true proposition: None = NegatedAtom pickup-and-loose(node0-2, key7, key7)
Removed false proposition: None = Atom pickup-and-loose(node0-2, key8, key8)
Removed true proposition: None = NegatedAtom pickup-and-loose(node0-2, key8, key8)
Removed false proposition: None = Atom pickup-and-loose(node0-3, key0, key0)
Removed true proposition: None = NegatedAtom pickup-and-loose(node0-3, key0, key0)
Removed false proposition: None = Atom pickup-and-loose(node0-3, key1, key1)
Removed true proposition: None = NegatedAtom pickup-and-loose(node0-3, key1, key1)
Removed false proposition: None = Atom pickup-and-loose(node0-3, key2, key2)
Removed true proposition: None = NegatedAtom pickup-and-loose(node0-3, key2, key2)
Removed false proposition: None = Atom pickup-and-loose(node0-3, key3, key3)
Removed true proposition: None = NegatedAtom pickup-and-loose(node0-3, key3, key3)
Removed false proposition: None = Atom pickup-and-loose(node0-3, key4, key4)
Removed true proposition: None = NegatedAtom pickup-and-loose(node0-3, key4, key4)
Removed false proposition: None = Atom pickup-and-loose(node0-3, key5, key5)
Removed true proposition: None = NegatedAtom pickup-and-loose(node0-3, key5, key5)
Removed false proposition: None = Atom pickup-and-loose(node0-3, key6, key6)
Removed true proposition: None = NegatedAtom pickup-and-loose(node0-3, key6, key6)
Removed false proposition: None = Atom pickup-and-loose(node0-3, key7, key7)
Removed true proposition: None = NegatedAtom pickup-and-loose(node0-3, key7, key7)
Removed false proposition: None = Atom pickup-and-loose(node0-3, key8, key8)
Removed true proposition: None = NegatedAtom pickup-and-loose(node0-3, key8, key8)
Removed false proposition: None = Atom pickup-and-loose(node0-4, key0, key0)
Removed true proposition: None = NegatedAtom pickup-and-loose(node0-4, key0, key0)
Removed false proposition: None = Atom pickup-and-loose(node0-4, key1, key1)
Removed true proposition: None = NegatedAtom pickup-and-loose(node0-4, key1, key1)
Removed false proposition: None = Atom pickup-and-loose(node0-4, key2, key2)
Removed true proposition: None = NegatedAtom pickup-and-loose(node0-4, key2, key2)
Removed false proposition: None = Atom pickup-and-loose(node0-4, key3, key3)
Removed true proposition: None = NegatedAtom pickup-and-loose(node0-4, key3, key3)
Removed false proposition: None = Atom pickup-and-loose(node0-4, key4, key4)
Removed true proposition: None = NegatedAtom pickup-and-loose(node0-4, key4, key4)
Removed false proposition: None = Atom pickup-and-loose(node0-4, key5, key5)
Removed true proposition: None = NegatedAtom pickup-and-loose(node0-4, key5, key5)
Removed false proposition: None = Atom pickup-and-loose(node0-4, key6, key6)
Removed true proposition: None = NegatedAtom pickup-and-loose(node0-4, key6, key6)
Removed false proposition: None = Atom pickup-and-loose(node0-4, key7, key7)
Removed true proposition: None = NegatedAtom pickup-and-loose(node0-4, key7, key7)
Removed false proposition: None = Atom pickup-and-loose(node0-4, key8, key8)
Removed true proposition: None = NegatedAtom pickup-and-loose(node0-4, key8, key8)
Removed false proposition: None = Atom pickup-and-loose(node1-0, key0, key0)
Removed true proposition: None = NegatedAtom pickup-and-loose(node1-0, key0, key0)
Removed false proposition: None = Atom pickup-and-loose(node1-0, key1, key1)
Removed true proposition: None = NegatedAtom pickup-and-loose(node1-0, key1, key1)
Removed false proposition: None = Atom pickup-and-loose(node1-0, key2, key2)
Removed true proposition: None = NegatedAtom pickup-and-loose(node1-0, key2, key2)
Removed false proposition: None = Atom pickup-and-loose(node1-0, key3, key3)
Removed true proposition: None = NegatedAtom pickup-and-loose(node1-0, key3, key3)
Removed false proposition: None = Atom pickup-and-loose(node1-0, key4, key4)
Removed true proposition: None = NegatedAtom pickup-and-loose(node1-0, key4, key4)
Removed false proposition: None = Atom pickup-and-loose(node1-0, key5, key5)
Removed true proposition: None = NegatedAtom pickup-and-loose(node1-0, key5, key5)
Removed false proposition: None = Atom pickup-and-loose(node1-0, key6, key6)
Removed true proposition: None = NegatedAtom pickup-and-loose(node1-0, key6, key6)
Removed false proposition: None = Atom pickup-and-loose(node1-0, key7, key7)
Removed true proposition: None = NegatedAtom pickup-and-loose(node1-0, key7, key7)
Removed false proposition: None = Atom pickup-and-loose(node1-0, key8, key8)
Removed true proposition: None = NegatedAtom pickup-and-loose(node1-0, key8, key8)
Removed false proposition: None = Atom pickup-and-loose(node1-1, key0, key0)
Removed true proposition: None = NegatedAtom pickup-and-loose(node1-1, key0, key0)
Removed false proposition: None = Atom pickup-and-loose(node1-1, key1, key1)
Removed true proposition: None = NegatedAtom pickup-and-loose(node1-1, key1, key1)
Removed false proposition: None = Atom pickup-and-loose(node1-1, key2, key2)
Removed true proposition: None = NegatedAtom pickup-and-loose(node1-1, key2, key2)
Removed false proposition: None = Atom pickup-and-loose(node1-1, key3, key3)
Removed true proposition: None = NegatedAtom pickup-and-loose(node1-1, key3, key3)
Removed false proposition: None = Atom pickup-and-loose(node1-1, key4, key4)
Removed true proposition: None = NegatedAtom pickup-and-loose(node1-1, key4, key4)
Removed false proposition: None = Atom pickup-and-loose(node1-1, key5, key5)
Removed true proposition: None = NegatedAtom pickup-and-loose(node1-1, key5, key5)
Removed false proposition: None = Atom pickup-and-loose(node1-1, key6, key6)
Removed true proposition: None = NegatedAtom pickup-and-loose(node1-1, key6, key6)
Removed false proposition: None = Atom pickup-and-loose(node1-1, key7, key7)
Removed true proposition: None = NegatedAtom pickup-and-loose(node1-1, key7, key7)
Removed false proposition: None = Atom pickup-and-loose(node1-1, key8, key8)
Removed true proposition: None = NegatedAtom pickup-and-loose(node1-1, key8, key8)
Removed false proposition: None = Atom pickup-and-loose(node1-2, key0, key0)
Removed true proposition: None = NegatedAtom pickup-and-loose(node1-2, key0, key0)
Removed false proposition: None = Atom pickup-and-loose(node1-2, key1, key1)
Removed true proposition: None = NegatedAtom pickup-and-loose(node1-2, key1, key1)
Removed false proposition: None = Atom pickup-and-loose(node1-2, key2, key2)
Removed true proposition: None = NegatedAtom pickup-and-loose(node1-2, key2, key2)
Removed false proposition: None = Atom pickup-and-loose(node1-2, key3, key3)
Removed true proposition: None = NegatedAtom pickup-and-loose(node1-2, key3, key3)
Removed false proposition: None = Atom pickup-and-loose(node1-2, key4, key4)
Removed true proposition: None = NegatedAtom pickup-and-loose(node1-2, key4, key4)
Removed false proposition: None = Atom pickup-and-loose(node1-2, key5, key5)
Removed true proposition: None = NegatedAtom pickup-and-loose(node1-2, key5, key5)
Removed false proposition: None = Atom pickup-and-loose(node1-2, key6, key6)
Removed true proposition: None = NegatedAtom pickup-and-loose(node1-2, key6, key6)
Removed false proposition: None = Atom pickup-and-loose(node1-2, key7, key7)
Removed true proposition: None = NegatedAtom pickup-and-loose(node1-2, key7, key7)
Removed false proposition: None = Atom pickup-and-loose(node1-2, key8, key8)
Removed true proposition: None = NegatedAtom pickup-and-loose(node1-2, key8, key8)
Removed false proposition: None = Atom pickup-and-loose(node1-3, key0, key0)
Removed true proposition: None = NegatedAtom pickup-and-loose(node1-3, key0, key0)
Removed false proposition: None = Atom pickup-and-loose(node1-3, key1, key1)
Removed true proposition: None = NegatedAtom pickup-and-loose(node1-3, key1, key1)
Removed false proposition: None = Atom pickup-and-loose(node1-3, key2, key2)
Removed true proposition: None = NegatedAtom pickup-and-loose(node1-3, key2, key2)
Removed false proposition: None = Atom pickup-and-loose(node1-3, key3, key3)
Removed true proposition: None = NegatedAtom pickup-and-loose(node1-3, key3, key3)
Removed false proposition: None = Atom pickup-and-loose(node1-3, key4, key4)
Removed true proposition: None = NegatedAtom pickup-and-loose(node1-3, key4, key4)
Removed false proposition: None = Atom pickup-and-loose(node1-3, key5, key5)
Removed true proposition: None = NegatedAtom pickup-and-loose(node1-3, key5, key5)
Removed false proposition: None = Atom pickup-and-loose(node1-3, key6, key6)
Removed true proposition: None = NegatedAtom pickup-and-loose(node1-3, key6, key6)
Removed false proposition: None = Atom pickup-and-loose(node1-3, key7, key7)
Removed true proposition: None = NegatedAtom pickup-and-loose(node1-3, key7, key7)
Removed false proposition: None = Atom pickup-and-loose(node1-3, key8, key8)
Removed true proposition: None = NegatedAtom pickup-and-loose(node1-3, key8, key8)
Removed false proposition: None = Atom pickup-and-loose(node1-4, key0, key0)
Removed true proposition: None = NegatedAtom pickup-and-loose(node1-4, key0, key0)
Removed false proposition: None = Atom pickup-and-loose(node1-4, key1, key1)
Removed true proposition: None = NegatedAtom pickup-and-loose(node1-4, key1, key1)
Removed false proposition: None = Atom pickup-and-loose(node1-4, key2, key2)
Removed true proposition: None = NegatedAtom pickup-and-loose(node1-4, key2, key2)
Removed false proposition: None = Atom pickup-and-loose(node1-4, key3, key3)
Removed true proposition: None = NegatedAtom pickup-and-loose(node1-4, key3, key3)
Removed false proposition: None = Atom pickup-and-loose(node1-4, key4, key4)
Removed true proposition: None = NegatedAtom pickup-and-loose(node1-4, key4, key4)
Removed false proposition: None = Atom pickup-and-loose(node1-4, key5, key5)
Removed true proposition: None = NegatedAtom pickup-and-loose(node1-4, key5, key5)
Removed false proposition: None = Atom pickup-and-loose(node1-4, key6, key6)
Removed true proposition: None = NegatedAtom pickup-and-loose(node1-4, key6, key6)
Removed false proposition: None = Atom pickup-and-loose(node1-4, key7, key7)
Removed true proposition: None = NegatedAtom pickup-and-loose(node1-4, key7, key7)
Removed false proposition: None = Atom pickup-and-loose(node1-4, key8, key8)
Removed true proposition: None = NegatedAtom pickup-and-loose(node1-4, key8, key8)
Removed false proposition: None = Atom pickup-and-loose(node2-0, key0, key0)
Removed true proposition: None = NegatedAtom pickup-and-loose(node2-0, key0, key0)
Removed false proposition: None = Atom pickup-and-loose(node2-0, key1, key1)
Removed true proposition: None = NegatedAtom pickup-and-loose(node2-0, key1, key1)
Removed false proposition: None = Atom pickup-and-loose(node2-0, key2, key2)
Removed true proposition: None = NegatedAtom pickup-and-loose(node2-0, key2, key2)
Removed false proposition: None = Atom pickup-and-loose(node2-0, key3, key3)
Removed true proposition: None = NegatedAtom pickup-and-loose(node2-0, key3, key3)
Removed false proposition: None = Atom pickup-and-loose(node2-0, key4, key4)
Removed true proposition: None = NegatedAtom pickup-and-loose(node2-0, key4, key4)
Removed false proposition: None = Atom pickup-and-loose(node2-0, key5, key5)
Removed true proposition: None = NegatedAtom pickup-and-loose(node2-0, key5, key5)
Removed false proposition: None = Atom pickup-and-loose(node2-0, key6, key6)
Removed true proposition: None = NegatedAtom pickup-and-loose(node2-0, key6, key6)
Removed false proposition: None = Atom pickup-and-loose(node2-0, key7, key7)
Removed true proposition: None = NegatedAtom pickup-and-loose(node2-0, key7, key7)
Removed false proposition: None = Atom pickup-and-loose(node2-0, key8, key8)
Removed true proposition: None = NegatedAtom pickup-and-loose(node2-0, key8, key8)
Removed false proposition: None = Atom pickup-and-loose(node2-1, key0, key0)
Removed true proposition: None = NegatedAtom pickup-and-loose(node2-1, key0, key0)
Removed false proposition: None = Atom pickup-and-loose(node2-1, key1, key1)
Removed true proposition: None = NegatedAtom pickup-and-loose(node2-1, key1, key1)
Removed false proposition: None = Atom pickup-and-loose(node2-1, key2, key2)
Removed true proposition: None = NegatedAtom pickup-and-loose(node2-1, key2, key2)
Removed false proposition: None = Atom pickup-and-loose(node2-1, key3, key3)
Removed true proposition: None = NegatedAtom pickup-and-loose(node2-1, key3, key3)
Removed false proposition: None = Atom pickup-and-loose(node2-1, key4, key4)
Removed true proposition: None = NegatedAtom pickup-and-loose(node2-1, key4, key4)
Removed false proposition: None = Atom pickup-and-loose(node2-1, key5, key5)
Removed true proposition: None = NegatedAtom pickup-and-loose(node2-1, key5, key5)
Removed false proposition: None = Atom pickup-and-loose(node2-1, key6, key6)
Removed true proposition: None = NegatedAtom pickup-and-loose(node2-1, key6, key6)
Removed false proposition: None = Atom pickup-and-loose(node2-1, key7, key7)
Removed true proposition: None = NegatedAtom pickup-and-loose(node2-1, key7, key7)
Removed false proposition: None = Atom pickup-and-loose(node2-1, key8, key8)
Removed true proposition: None = NegatedAtom pickup-and-loose(node2-1, key8, key8)
Removed false proposition: None = Atom pickup-and-loose(node2-2, key0, key0)
Removed true proposition: None = NegatedAtom pickup-and-loose(node2-2, key0, key0)
Removed false proposition: None = Atom pickup-and-loose(node2-2, key1, key1)
Removed true proposition: None = NegatedAtom pickup-and-loose(node2-2, key1, key1)
Removed false proposition: None = Atom pickup-and-loose(node2-2, key2, key2)
Removed true proposition: None = NegatedAtom pickup-and-loose(node2-2, key2, key2)
Removed false proposition: None = Atom pickup-and-loose(node2-2, key3, key3)
Removed true proposition: None = NegatedAtom pickup-and-loose(node2-2, key3, key3)
Removed false proposition: None = Atom pickup-and-loose(node2-2, key4, key4)
Removed true proposition: None = NegatedAtom pickup-and-loose(node2-2, key4, key4)
Removed false proposition: None = Atom pickup-and-loose(node2-2, key5, key5)
Removed true proposition: None = NegatedAtom pickup-and-loose(node2-2, key5, key5)
Removed false proposition: None = Atom pickup-and-loose(node2-2, key6, key6)
Removed true proposition: None = NegatedAtom pickup-and-loose(node2-2, key6, key6)
Removed false proposition: None = Atom pickup-and-loose(node2-2, key7, key7)
Removed true proposition: None = NegatedAtom pickup-and-loose(node2-2, key7, key7)
Removed false proposition: None = Atom pickup-and-loose(node2-2, key8, key8)
Removed true proposition: None = NegatedAtom pickup-and-loose(node2-2, key8, key8)
Removed false proposition: None = Atom pickup-and-loose(node2-3, key0, key0)
Removed true proposition: None = NegatedAtom pickup-and-loose(node2-3, key0, key0)
Removed false proposition: None = Atom pickup-and-loose(node2-3, key1, key1)
Removed true proposition: None = NegatedAtom pickup-and-loose(node2-3, key1, key1)
Removed false proposition: None = Atom pickup-and-loose(node2-3, key2, key2)
Removed true proposition: None = NegatedAtom pickup-and-loose(node2-3, key2, key2)
Removed false proposition: None = Atom pickup-and-loose(node2-3, key3, key3)
Removed true proposition: None = NegatedAtom pickup-and-loose(node2-3, key3, key3)
Removed false proposition: None = Atom pickup-and-loose(node2-3, key4, key4)
Removed true proposition: None = NegatedAtom pickup-and-loose(node2-3, key4, key4)
Removed false proposition: None = Atom pickup-and-loose(node2-3, key5, key5)
Removed true proposition: None = NegatedAtom pickup-and-loose(node2-3, key5, key5)
Removed false proposition: None = Atom pickup-and-loose(node2-3, key6, key6)
Removed true proposition: None = NegatedAtom pickup-and-loose(node2-3, key6, key6)
Removed false proposition: None = Atom pickup-and-loose(node2-3, key7, key7)
Removed true proposition: None = NegatedAtom pickup-and-loose(node2-3, key7, key7)
Removed false proposition: None = Atom pickup-and-loose(node2-3, key8, key8)
Removed true proposition: None = NegatedAtom pickup-and-loose(node2-3, key8, key8)
Removed false proposition: None = Atom pickup-and-loose(node2-4, key0, key0)
Removed true proposition: None = NegatedAtom pickup-and-loose(node2-4, key0, key0)
Removed false proposition: None = Atom pickup-and-loose(node2-4, key1, key1)
Removed true proposition: None = NegatedAtom pickup-and-loose(node2-4, key1, key1)
Removed false proposition: None = Atom pickup-and-loose(node2-4, key2, key2)
Removed true proposition: None = NegatedAtom pickup-and-loose(node2-4, key2, key2)
Removed false proposition: None = Atom pickup-and-loose(node2-4, key3, key3)
Removed true proposition: None = NegatedAtom pickup-and-loose(node2-4, key3, key3)
Removed false proposition: None = Atom pickup-and-loose(node2-4, key4, key4)
Removed true proposition: None = NegatedAtom pickup-and-loose(node2-4, key4, key4)
Removed false proposition: None = Atom pickup-and-loose(node2-4, key5, key5)
Removed true proposition: None = NegatedAtom pickup-and-loose(node2-4, key5, key5)
Removed false proposition: None = Atom pickup-and-loose(node2-4, key6, key6)
Removed true proposition: None = NegatedAtom pickup-and-loose(node2-4, key6, key6)
Removed false proposition: None = Atom pickup-and-loose(node2-4, key7, key7)
Removed true proposition: None = NegatedAtom pickup-and-loose(node2-4, key7, key7)
Removed false proposition: None = Atom pickup-and-loose(node2-4, key8, key8)
Removed true proposition: None = NegatedAtom pickup-and-loose(node2-4, key8, key8)
Removed false proposition: None = Atom pickup-and-loose(node3-0, key0, key0)
Removed true proposition: None = NegatedAtom pickup-and-loose(node3-0, key0, key0)
Removed false proposition: None = Atom pickup-and-loose(node3-0, key1, key1)
Removed true proposition: None = NegatedAtom pickup-and-loose(node3-0, key1, key1)
Removed false proposition: None = Atom pickup-and-loose(node3-0, key2, key2)
Removed true proposition: None = NegatedAtom pickup-and-loose(node3-0, key2, key2)
Removed false proposition: None = Atom pickup-and-loose(node3-0, key3, key3)
Removed true proposition: None = NegatedAtom pickup-and-loose(node3-0, key3, key3)
Removed false proposition: None = Atom pickup-and-loose(node3-0, key4, key4)
Removed true proposition: None = NegatedAtom pickup-and-loose(node3-0, key4, key4)
Removed false proposition: None = Atom pickup-and-loose(node3-0, key5, key5)
Removed true proposition: None = NegatedAtom pickup-and-loose(node3-0, key5, key5)
Removed false proposition: None = Atom pickup-and-loose(node3-0, key6, key6)
Removed true proposition: None = NegatedAtom pickup-and-loose(node3-0, key6, key6)
Removed false proposition: None = Atom pickup-and-loose(node3-0, key7, key7)
Removed true proposition: None = NegatedAtom pickup-and-loose(node3-0, key7, key7)
Removed false proposition: None = Atom pickup-and-loose(node3-0, key8, key8)
Removed true proposition: None = NegatedAtom pickup-and-loose(node3-0, key8, key8)
Removed false proposition: None = Atom pickup-and-loose(node3-1, key0, key0)
Removed true proposition: None = NegatedAtom pickup-and-loose(node3-1, key0, key0)
Removed false proposition: None = Atom pickup-and-loose(node3-1, key1, key1)
Removed true proposition: None = NegatedAtom pickup-and-loose(node3-1, key1, key1)
Removed false proposition: None = Atom pickup-and-loose(node3-1, key2, key2)
Removed true proposition: None = NegatedAtom pickup-and-loose(node3-1, key2, key2)
Removed false proposition: None = Atom pickup-and-loose(node3-1, key3, key3)
Removed true proposition: None = NegatedAtom pickup-and-loose(node3-1, key3, key3)
Removed false proposition: None = Atom pickup-and-loose(node3-1, key4, key4)
Removed true proposition: None = NegatedAtom pickup-and-loose(node3-1, key4, key4)
Removed false proposition: None = Atom pickup-and-loose(node3-1, key5, key5)
Removed true proposition: None = NegatedAtom pickup-and-loose(node3-1, key5, key5)
Removed false proposition: None = Atom pickup-and-loose(node3-1, key6, key6)
Removed true proposition: None = NegatedAtom pickup-and-loose(node3-1, key6, key6)
Removed false proposition: None = Atom pickup-and-loose(node3-1, key7, key7)
Removed true proposition: None = NegatedAtom pickup-and-loose(node3-1, key7, key7)
Removed false proposition: None = Atom pickup-and-loose(node3-1, key8, key8)
Removed true proposition: None = NegatedAtom pickup-and-loose(node3-1, key8, key8)
Removed false proposition: None = Atom pickup-and-loose(node3-2, key0, key0)
Removed true proposition: None = NegatedAtom pickup-and-loose(node3-2, key0, key0)
Removed false proposition: None = Atom pickup-and-loose(node3-2, key1, key1)
Removed true proposition: None = NegatedAtom pickup-and-loose(node3-2, key1, key1)
Removed false proposition: None = Atom pickup-and-loose(node3-2, key2, key2)
Removed true proposition: None = NegatedAtom pickup-and-loose(node3-2, key2, key2)
Removed false proposition: None = Atom pickup-and-loose(node3-2, key3, key3)
Removed true proposition: None = NegatedAtom pickup-and-loose(node3-2, key3, key3)
Removed false proposition: None = Atom pickup-and-loose(node3-2, key4, key4)
Removed true proposition: None = NegatedAtom pickup-and-loose(node3-2, key4, key4)
Removed false proposition: None = Atom pickup-and-loose(node3-2, key5, key5)
Removed true proposition: None = NegatedAtom pickup-and-loose(node3-2, key5, key5)
Removed false proposition: None = Atom pickup-and-loose(node3-2, key6, key6)
Removed true proposition: None = NegatedAtom pickup-and-loose(node3-2, key6, key6)
Removed false proposition: None = Atom pickup-and-loose(node3-2, key7, key7)
Removed true proposition: None = NegatedAtom pickup-and-loose(node3-2, key7, key7)
Removed false proposition: None = Atom pickup-and-loose(node3-2, key8, key8)
Removed true proposition: None = NegatedAtom pickup-and-loose(node3-2, key8, key8)
Removed false proposition: None = Atom pickup-and-loose(node3-3, key0, key0)
Removed true proposition: None = NegatedAtom pickup-and-loose(node3-3, key0, key0)
Removed false proposition: None = Atom pickup-and-loose(node3-3, key1, key1)
Removed true proposition: None = NegatedAtom pickup-and-loose(node3-3, key1, key1)
Removed false proposition: None = Atom pickup-and-loose(node3-3, key2, key2)
Removed true proposition: None = NegatedAtom pickup-and-loose(node3-3, key2, key2)
Removed false proposition: None = Atom pickup-and-loose(node3-3, key3, key3)
Removed true proposition: None = NegatedAtom pickup-and-loose(node3-3, key3, key3)
Removed false proposition: None = Atom pickup-and-loose(node3-3, key4, key4)
Removed true proposition: None = NegatedAtom pickup-and-loose(node3-3, key4, key4)
Removed false proposition: None = Atom pickup-and-loose(node3-3, key5, key5)
Removed true proposition: None = NegatedAtom pickup-and-loose(node3-3, key5, key5)
Removed false proposition: None = Atom pickup-and-loose(node3-3, key6, key6)
Removed true proposition: None = NegatedAtom pickup-and-loose(node3-3, key6, key6)
Removed false proposition: None = Atom pickup-and-loose(node3-3, key7, key7)
Removed true proposition: None = NegatedAtom pickup-and-loose(node3-3, key7, key7)
Removed false proposition: None = Atom pickup-and-loose(node3-3, key8, key8)
Removed true proposition: None = NegatedAtom pickup-and-loose(node3-3, key8, key8)
Removed false proposition: None = Atom pickup-and-loose(node3-4, key0, key0)
Removed true proposition: None = NegatedAtom pickup-and-loose(node3-4, key0, key0)
Removed false proposition: None = Atom pickup-and-loose(node3-4, key1, key1)
Removed true proposition: None = NegatedAtom pickup-and-loose(node3-4, key1, key1)
Removed false proposition: None = Atom pickup-and-loose(node3-4, key2, key2)
Removed true proposition: None = NegatedAtom pickup-and-loose(node3-4, key2, key2)
Removed false proposition: None = Atom pickup-and-loose(node3-4, key3, key3)
Removed true proposition: None = NegatedAtom pickup-and-loose(node3-4, key3, key3)
Removed false proposition: None = Atom pickup-and-loose(node3-4, key4, key4)
Removed true proposition: None = NegatedAtom pickup-and-loose(node3-4, key4, key4)
Removed false proposition: None = Atom pickup-and-loose(node3-4, key5, key5)
Removed true proposition: None = NegatedAtom pickup-and-loose(node3-4, key5, key5)
Removed false proposition: None = Atom pickup-and-loose(node3-4, key6, key6)
Removed true proposition: None = NegatedAtom pickup-and-loose(node3-4, key6, key6)
Removed false proposition: None = Atom pickup-and-loose(node3-4, key7, key7)
Removed true proposition: None = NegatedAtom pickup-and-loose(node3-4, key7, key7)
Removed false proposition: None = Atom pickup-and-loose(node3-4, key8, key8)
Removed true proposition: None = NegatedAtom pickup-and-loose(node3-4, key8, key8)
Removed false proposition: None = Atom pickup-and-loose(node4-0, key0, key0)
Removed true proposition: None = NegatedAtom pickup-and-loose(node4-0, key0, key0)
Removed false proposition: None = Atom pickup-and-loose(node4-0, key1, key1)
Removed true proposition: None = NegatedAtom pickup-and-loose(node4-0, key1, key1)
Removed false proposition: None = Atom pickup-and-loose(node4-0, key2, key2)
Removed true proposition: None = NegatedAtom pickup-and-loose(node4-0, key2, key2)
Removed false proposition: None = Atom pickup-and-loose(node4-0, key3, key3)
Removed true proposition: None = NegatedAtom pickup-and-loose(node4-0, key3, key3)
Removed false proposition: None = Atom pickup-and-loose(node4-0, key4, key4)
Removed true proposition: None = NegatedAtom pickup-and-loose(node4-0, key4, key4)
Removed false proposition: None = Atom pickup-and-loose(node4-0, key5, key5)
Removed true proposition: None = NegatedAtom pickup-and-loose(node4-0, key5, key5)
Removed false proposition: None = Atom pickup-and-loose(node4-0, key6, key6)
Removed true proposition: None = NegatedAtom pickup-and-loose(node4-0, key6, key6)
Removed false proposition: None = Atom pickup-and-loose(node4-0, key7, key7)
Removed true proposition: None = NegatedAtom pickup-and-loose(node4-0, key7, key7)
Removed false proposition: None = Atom pickup-and-loose(node4-0, key8, key8)
Removed true proposition: None = NegatedAtom pickup-and-loose(node4-0, key8, key8)
Removed false proposition: None = Atom pickup-and-loose(node4-1, key0, key0)
Removed true proposition: None = NegatedAtom pickup-and-loose(node4-1, key0, key0)
Removed false proposition: None = Atom pickup-and-loose(node4-1, key1, key1)
Removed true proposition: None = NegatedAtom pickup-and-loose(node4-1, key1, key1)
Removed false proposition: None = Atom pickup-and-loose(node4-1, key2, key2)
Removed true proposition: None = NegatedAtom pickup-and-loose(node4-1, key2, key2)
Removed false proposition: None = Atom pickup-and-loose(node4-1, key3, key3)
Removed true proposition: None = NegatedAtom pickup-and-loose(node4-1, key3, key3)
Removed false proposition: None = Atom pickup-and-loose(node4-1, key4, key4)
Removed true proposition: None = NegatedAtom pickup-and-loose(node4-1, key4, key4)
Removed false proposition: None = Atom pickup-and-loose(node4-1, key5, key5)
Removed true proposition: None = NegatedAtom pickup-and-loose(node4-1, key5, key5)
Removed false proposition: None = Atom pickup-and-loose(node4-1, key6, key6)
Removed true proposition: None = NegatedAtom pickup-and-loose(node4-1, key6, key6)
Removed false proposition: None = Atom pickup-and-loose(node4-1, key7, key7)
Removed true proposition: None = NegatedAtom pickup-and-loose(node4-1, key7, key7)
Removed false proposition: None = Atom pickup-and-loose(node4-1, key8, key8)
Removed true proposition: None = NegatedAtom pickup-and-loose(node4-1, key8, key8)
Removed false proposition: None = Atom pickup-and-loose(node4-2, key0, key0)
Removed true proposition: None = NegatedAtom pickup-and-loose(node4-2, key0, key0)
Removed false proposition: None = Atom pickup-and-loose(node4-2, key1, key1)
Removed true proposition: None = NegatedAtom pickup-and-loose(node4-2, key1, key1)
Removed false proposition: None = Atom pickup-and-loose(node4-2, key2, key2)
Removed true proposition: None = NegatedAtom pickup-and-loose(node4-2, key2, key2)
Removed false proposition: None = Atom pickup-and-loose(node4-2, key3, key3)
Removed true proposition: None = NegatedAtom pickup-and-loose(node4-2, key3, key3)
Removed false proposition: None = Atom pickup-and-loose(node4-2, key4, key4)
Removed true proposition: None = NegatedAtom pickup-and-loose(node4-2, key4, key4)
Removed false proposition: None = Atom pickup-and-loose(node4-2, key5, key5)
Removed true proposition: None = NegatedAtom pickup-and-loose(node4-2, key5, key5)
Removed false proposition: None = Atom pickup-and-loose(node4-2, key6, key6)
Removed true proposition: None = NegatedAtom pickup-and-loose(node4-2, key6, key6)
Removed false proposition: None = Atom pickup-and-loose(node4-2, key7, key7)
Removed true proposition: None = NegatedAtom pickup-and-loose(node4-2, key7, key7)
Removed false proposition: None = Atom pickup-and-loose(node4-2, key8, key8)
Removed true proposition: None = NegatedAtom pickup-and-loose(node4-2, key8, key8)
Removed false proposition: None = Atom pickup-and-loose(node4-3, key0, key0)
Removed true proposition: None = NegatedAtom pickup-and-loose(node4-3, key0, key0)
Removed false proposition: None = Atom pickup-and-loose(node4-3, key1, key1)
Removed true proposition: None = NegatedAtom pickup-and-loose(node4-3, key1, key1)
Removed false proposition: None = Atom pickup-and-loose(node4-3, key2, key2)
Removed true proposition: None = NegatedAtom pickup-and-loose(node4-3, key2, key2)
Removed false proposition: None = Atom pickup-and-loose(node4-3, key3, key3)
Removed true proposition: None = NegatedAtom pickup-and-loose(node4-3, key3, key3)
Removed false proposition: None = Atom pickup-and-loose(node4-3, key4, key4)
Removed true proposition: None = NegatedAtom pickup-and-loose(node4-3, key4, key4)
Removed false proposition: None = Atom pickup-and-loose(node4-3, key5, key5)
Removed true proposition: None = NegatedAtom pickup-and-loose(node4-3, key5, key5)
Removed false proposition: None = Atom pickup-and-loose(node4-3, key6, key6)
Removed true proposition: None = NegatedAtom pickup-and-loose(node4-3, key6, key6)
Removed false proposition: None = Atom pickup-and-loose(node4-3, key7, key7)
Removed true proposition: None = NegatedAtom pickup-and-loose(node4-3, key7, key7)
Removed false proposition: None = Atom pickup-and-loose(node4-3, key8, key8)
Removed true proposition: None = NegatedAtom pickup-and-loose(node4-3, key8, key8)
Removed false proposition: None = Atom pickup-and-loose(node4-4, key0, key0)
Removed true proposition: None = NegatedAtom pickup-and-loose(node4-4, key0, key0)
Removed false proposition: None = Atom pickup-and-loose(node4-4, key1, key1)
Removed true proposition: None = NegatedAtom pickup-and-loose(node4-4, key1, key1)
Removed false proposition: None = Atom pickup-and-loose(node4-4, key2, key2)
Removed true proposition: None = NegatedAtom pickup-and-loose(node4-4, key2, key2)
Removed false proposition: None = Atom pickup-and-loose(node4-4, key3, key3)
Removed true proposition: None = NegatedAtom pickup-and-loose(node4-4, key3, key3)
Removed false proposition: None = Atom pickup-and-loose(node4-4, key4, key4)
Removed true proposition: None = NegatedAtom pickup-and-loose(node4-4, key4, key4)
Removed false proposition: None = Atom pickup-and-loose(node4-4, key5, key5)
Removed true proposition: None = NegatedAtom pickup-and-loose(node4-4, key5, key5)
Removed false proposition: None = Atom pickup-and-loose(node4-4, key6, key6)
Removed true proposition: None = NegatedAtom pickup-and-loose(node4-4, key6, key6)
Removed false proposition: None = Atom pickup-and-loose(node4-4, key7, key7)
Removed true proposition: None = NegatedAtom pickup-and-loose(node4-4, key7, key7)
Removed false proposition: None = Atom pickup-and-loose(node4-4, key8, key8)
Removed true proposition: None = NegatedAtom pickup-and-loose(node4-4, key8, key8)
0 operators removed
520 propositions removed
Detecting unreachable propositions: [0.030s CPU, 0.035s wall-clock]
Translator variables: 2404
Translator derived variables: 0
Translator facts: 5047
Translator goal facts: 1
Translator mutex groups: 20
Translator total mutex groups size: 287
Translator operators: 7152
Translator axioms: 0
Translator task size: 63613
Translator peak memory: 69872 KB
Writing output... [0.040s CPU, 0.041s wall-clock]
Done! [0.670s CPU, 0.676s wall-clock]

2. Running preprocessor
Building causal graph...
The causal graph is not acyclic.
2404 variables of 2404 necessary
1 of 20 mutex groups necessary.
7152 of 7152 operators necessary.
0 of 0 axiom rules necessary.
Building domain transition graphs...
solveable in poly time 0
Building successor generator...
Preprocessor facts: 5047
Preprocessor derived variables: 0
Preprocessor task size: 63336
Writing output...
done


3. Running search
/home/sifao/prp/src/search/downward ipc policy-repair
This is a unit task.
/home/sifao/prp/src/search/downward-release --heuristic "h=ff(cost_type=1)" --search "lazy_greedy([h],preferred=[h])" --random-seed 814102613 < output
Simplifying transitions... done!
Variables: 2404
Bytes per state: 308

Total allotted time (s): 1800
Max time for core JIC (remaining used in final-round repairs): 1800
Max time for each of the 1 epochs: 1800

 !! Warning: Disabling the simplification of unary operators !!
 !!           to keep the non-deterministic planning sound.  !!
Generated 188 state(s).
Dead ends: 0 state(s). (0 recorded)
move-0_DETDUP_0 node2-4 node1-4 (1)
move-0_DETDUP_0 node1-4 node1-3 (1)
move-0_DETDUP_0 node1-3 node1-2 (1)
move-0_DETDUP_0 node1-2 node0-2 (1)
pickup-0_DETDUP_0 node0-2 key3 (1)
move-0_DETDUP_0 node0-2 node0-1 (1)
move-0_DETDUP_0 node0-1 node1-1 (1)
move-0_DETDUP_0 node1-1 node1-2 (1)
move-0_DETDUP_0 node1-2 node1-3 (1)
unlock-0_DETDUP_0 node1-3 node2-3 key3 square (1)
move-0_DETDUP_0 node1-3 node2-3 (1)
pickup-and-loose-0_DETDUP_0 node2-3 key0 key3 (1)
move-0_DETDUP_0 node2-3 node1-3 (1)
move-0_DETDUP_0 node1-3 node1-2 (1)
move-0_DETDUP_0 node1-2 node1-1 (1)
putdown-0_DETDUP_0 node1-1 key0 (1)
Plan length: 16 step(s).
Plan cost: 16
Initial search time: 0.01s
Initial total time: 1.06s


Regressing the plan...


Generating an initial policy...
Resiliency check for state:
AAAAAAAAAAAAAAAAAA
[-1, -1, -1, -1, 1, 1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 1, -1, 1, 1, 1, -1, 1, -1, -1, 1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 1, -1, 1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 0, -1, -1, 14, -1, -1, 2, -1, -1, -1, -1, -1, 0, 0, 13]
Peak memory: 188632 KB
caught signal 11 -- exiting
